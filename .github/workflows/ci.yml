name: CI Pipeline

# Trigger on pull requests to any branch
on:
  pull_request:
    branches: [ "**" ]

jobs:
  # Backend CI Job
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Create dummy .env file for CI
      working-directory: ./backend
      run: |
        echo "PORT=3001" > .env
        echo "FRONTEND_URL=http://localhost:3000" >> .env
        echo "BACKEND_URL=http://localhost:3001" >> .env
        
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Run backend linting
      working-directory: ./backend
      run: npm run lint
      continue-on-error: false
      
    - name: Test backend syntax
      working-directory: ./backend
      run: |
        # Check syntax without starting server
        node -c app.js
        echo "âœ… Backend syntax check passed"

  # Frontend CI Job  
  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run frontend linting
      working-directory: ./frontend
      run: npm run lint
      continue-on-error: false
      
    - name: Check frontend TypeScript
      working-directory: ./frontend
      run: npx tsc --noEmit
      continue-on-error: false
      
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      env:
        NEXT_PUBLIC_BACKEND_URL: http://localhost:3001

  # Docker Build Job (optional - verifies Dockerfiles work)
  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create dummy .env files for Docker build
      run: |
        echo "PORT=3001" > backend/.env
        echo "FRONTEND_URL=http://localhost:3000" >> backend/.env
        echo "BACKEND_URL=http://localhost:3001" >> backend/.env
        echo "NEXT_PUBLIC_BACKEND_URL=http://localhost:3001" > frontend/.env.local
        
    - name: Build backend Docker image
      run: docker build -f backend/Dockerfile backend/
      
    - name: Build frontend Docker image  
      run: docker build -f frontend/Dockerfile frontend/

  # Overall status check
  ci-complete:
    name: CI Complete
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci, docker-build]
    
    steps:
    - name: CI Success
      run: |
        echo "ðŸŽ‰ All CI checks passed!"
        echo "âœ… Backend linting and syntax check"
        echo "âœ… Frontend linting, TypeScript, and build"
        echo "âœ… Docker images build successfully"